#include<GL/glut.h>
#include<iostream>
#include <math.h>


float Hx = 0;
long long int time1=0, time2=0;

float Px = 0 , Py=0 ;
float PAngle = 0;

float C1x = 0 ;
float C2x = 0 ;
float C3x = 0 ;
float C4x = 0 ;
float C5x = 0 ;
float C6x = 0 ;

float BusX=0;
float TruckX=0;

float CraneY=0;




void polygonShade(float x[], float y[], int n, int r1, int g1 ,int b1 , int r2, int g2, int b2)
{
     for (int i=0 ; i< n; i++)
    {    if(i ==0 || i==1)
    {
         glBegin(GL_POLYGON);
         glColor3ub(r1,g1,b1);
          glVertex2i(x[i], y[i]);
          continue;
    }

          else if(i ==2 || i==3 || i==4|| i==5|| i==6|| i==7|| i==8|| i==9|| i==10|| i==11|| i==12 || i==13)
          {
        glBegin(GL_POLYGON);
         glColor3ub(r2,g2,b2);
          glVertex2i(x[i], y[i]);
          continue;
          }
    }
     glEnd();
}



void polygon(float x[], float y[], int n, int r, int g ,int b)
{
     for (int i=0 ; i< n; i++)
    {
         glBegin(GL_POLYGON);
         glColor3ub(r,g,b);
          glVertex2i(x[i], y[i]);
          continue;
    }
     glEnd();
}


void drawLine(float x1, float y1 , float x2, float y2 ,float width ,int r, int g ,int b)
{
glLineWidth(width);
glBegin(GL_LINES);
glColor3ub(r,g,b);

glVertex2f(x1,y1);
glVertex2f(x2,y2);
glEnd();
}


void drawLineShade(float x1, float y1 , float x2, float y2 ,float width ,int r1, int g1 ,int b1,int r2, int g2 ,int b2)
{
glLineWidth(width);
glBegin(GL_LINES);
glColor3ub(r1,g1,b1);
glVertex2f(x1,y1);
glColor3ub(r2,g2,b2);
glVertex2f(x2,y2);

glEnd();
}

void Circle(float cx, float cy, float radius , int r, int g ,int b)
{
glBegin(GL_POLYGON);

 for (float i = 0.0; i <= 2*3.1416 ; i += 0.001)
    {        glColor3ub(r,g,b);
         glVertex2f(cx+(sin(i)*radius), cy+(cos(i)*radius));
    }
glEnd();
}


void HalfCircle(float cx, float cy, float radius , int r, int g ,int b)
{
glBegin(GL_POLYGON);


    for (float i = 0.0; i <= 2*3.1416 / 2; i += 0.001)
    {        glColor3ub(r,g,b);
         glVertex2f(cx+(sin(i)*radius), cy+(cos(i)*radius));
    }
    glEnd();
}








void bezeirCurvePlot(float x[], float y[] , int r, int g ,int b )
{
float t ,put_x, put_y;

glBegin(GL_POLYGON);
for(t=0.0;t<=1.0;t=t+0.001)
{
glColor3ub(r, g , b);
put_x = pow(1-t,3)*x[0] + 3*t*pow(1-t,2)*x[1] + 3*t*t*(1-t)*x[2] + pow(t,3)*x[3];
put_y =  pow(1-t,3)*y[0] + 3*t*pow(1-t,2)*y[1] + 3*t*t*(1-t)*y[2] + pow(t,3)*y[3];
glVertex2f(put_x,put_y);
continue;
}
glEnd();

}

void bezeirLinePlot(float x[], float y[] ,int p ,int r, int g ,int b )
{
float t ,put_x, put_y;

for(t=0.0;t<=1.0;t=t+0.001)
{
glPointSize(p);
glBegin(GL_POINTS);
glColor3ub(r, g , b);
put_x = pow(1-t,3)*x[0] + 3*t*pow(1-t,2)*x[1] + 3*t*t*(1-t)*x[2] + pow(t,3)*x[3];
put_y =  pow(1-t,3)*y[0] + 3*t*pow(1-t,2)*y[1] + 3*t*t*(1-t)*y[2] + pow(t,3)*y[3];
glVertex2f(put_x,put_y);

continue;
}
glEnd();

}


/// hill structure
void hills(float xh1[], float yh1[],int n,int r1, int g1 ,int b1, int r2, int g2 ,int b2)
{
    polygonShade(xh1,yh1,n, r1,g1,b1, r2,g2,b2);
}




void Airplane()
{
    glPushMatrix();
    //glRotatef(30,0,0,1);
    if(Px > 0 )
    {
     glTranslatef(Px,0, 0);
    }
    else glTranslatef(Px,Py, 0);
    glRotatef(PAngle,0,0,1);


      ///WheelHolder
      drawLine(654, 1080-650,  697, 1080-486, 8,8,8,8);
      drawLine(660, 1080-612,  630, 1080-520, 6,8,8,8);


 ///MainBody



   float x1b[]= { 552, 665 , 920, 1492  };
   float y1b[]= { 647, 810 , 703, 536   } ;
  bezeirCurvePlot(x1b,y1b,230,230,250 );

  float x2b[]= { 552, 665 , 920, 1492  };
   float y2b[]= { 647, 490 , 377, 536 } ;
    bezeirCurvePlot(x2b,y2b,230,230,250);



    float x4b[]= { 562, 625 , 920, 1492-1  };
   float y4b[]= { 627, 470 , 320, 536 } ;
    bezeirCurvePlot(x4b,y4b,216,191,216);





   float x3b[]= { 552, 665 , 920, 1492  };
   float y3b[]= { 627, 470 , 330, 536 } ;
    bezeirCurvePlot(x3b,y3b,248,248,255);


 Circle(615,637, 65,248,248,255);

float x10[]= {588+6,641+6,668+6};
float y10[]={1080-463-38,1080-505-38,1080-435-38};
polygonShade(x10,y10,3,248,248,255 ,248,244,255 );


float x11[]= {1297+5,1467+5,1480+5,1480+15, 1475+15, 1425+15};
float y11[]={1080-589-15,1080-562-10,1080-550-10,1080-547-4, 1080-535-4, 1080-521-7};
polygonShade(x11,y11,6 ,248,248,255,248,244,255);








///LINES

float xL1[]= {544+40, 564+40 , 567+40, 547+40 };
float yL1[]= { 1080-498, 1080-450 , 1080-420 ,1080-386};
bezeirLinePlot( xL1, yL1, 3 ,83,104,114);

float xL2[]= {567+45,    850 , 1153 , 1290 };
float yL2[]= { 1080-420, 1080-506  , 1080-538 ,537};
 bezeirLinePlot( xL2, yL2, 25 ,167,107,207);


 float xL3[]= {567+40,    850 , 1153 , 1290 };
float yL3[]= { 1080-420-20, 1080-506-20  , 1080-538-20 ,537-20};
 bezeirLinePlot( xL3, yL3, 12 ,177,156,217);



///Fan
float x9[]= {809,964, 986,832};
float y9[]= {1080-598,1080-623,1080-532,1080-505};
polygonShade(x9,y9,4, 216,178,209,216,191,216);
Circle(981,1080-532-46.5,46.5, 216,191,216);
drawLine(809, 1080-598 ,832 ,1080-505 , 16,134,96,142);
Circle(809,481,8,134,96,142);
Circle(832.5,1080-505,8,134,96,142);

drawLine(809+50, 1080-606,832+50  ,1080-513 , 5,134,96,142);

    ///FrontWindow
     float x8[]= {584.5,660,668,620};
    float y8[]= {1080-385, 1080-401, 1080-375, 1080-372} ;
   polygonShade(x8,y8,4, 36,255,255,109,155,195);
   drawLine(606+20, 1080- 394.5 , 613+20,1080-373, 3, 54,69,79);
   drawLine(573+26.5, 1080-388, 593+27,1080-373 , 3, 54,69,79);


    ///Front Wheel
   Circle(650,424 , 35 ,28,40,65);
   Circle(650,424 , 25, 172,172,172);
   Circle(650,424 , 10, 59,68,75 );

      ///back Wheel
   Circle(1123 , 1080-712, 35 ,28,40,65);
   Circle(1123 , 1080-712, 25, 172,172,172);
    Circle(1123 , 1080-712, 10, 59,68,75);

   ///BigWing

   float x31[]= {809, 1116, 1224, 1137 };
   float y31[]= {1080-475 ,1080-536, 1080-718, 1080-704 } ;
   polygonShade(x31,y31,4,171,205,239, 0,51,102);



    float x32[]= {809, 1116, 1224, 1137 };
   float y32[]= {1080-475 ,1080-526, 1080-718, 1080-697 } ;
   polygonShade(x32,y32,4,191,148,228,206,200,239);



   ///Backwing

   float x41[]= {1297 , 1438, 1544, 1503 };
   float y41[]= {1080-465-22 ,1080-507-22, 1080-333, 1080-324 } ;


   float x42[]= {1343 , 1438, 1544, 1503 };
   float y42[]= {1080-465-36 ,1080-507-22, 1080-333, 1080-324 } ;




   float x43[]= {1297 , 1438, 1544, 1503 };
   float y43[]= {1080-465-82 ,1080-507-22, 1080-333, 1080-324 } ;


     polygonShade(x41,y41,4,224,176,255,182,102,210);
     polygonShade(x42,y42,4,181,126,220, 214,202,221);
       //polygon(x43,y43,4, 0,103,165);

   ///Backwing2

   float x51[]= {1442, 1502, 1550, 1510};
   float y51[]= {1080-389 ,1080-400, 1080-457, 1080-447 } ;
  polygonShade(x51, y51, 4, 0,0,0 , 0,0,0);


      float x52[]= {1442, 1502, 1550, 1510};
   float y52[]= {1080-389 ,1080-400, 1080-457, 1080-440 } ;
   polygonShade(x52, y52, 4, 191,0,255,120,81,169);


   ///Windows
   Circle(816 , 1080-437, 20,  105,53,156);
   Circle(816 , 1080-437, 17,  176,196,222);

   Circle(861 , 1080-445,20,  105,53,156);
   Circle(861 , 1080-445,17,  176,196,222);

   Circle(901 , 1080-455,20,  105,53,156);
   Circle(901 , 1080-455,17,  176,196,222);

   Circle(948 , 1080-466,20,  105,53,156);
   Circle(948 , 1080-466,17,  176,196,222);

   Circle(991 , 1080-474,20,  105,53,156);
   Circle(991 , 1080-474,17,  176,196,222);

   Circle(1036 , 1080-483,20,  105,53,156);
   Circle(1036 , 1080-483,17,  176,196,222);

   Circle(1077 , 1080-491, 20, 105,53,156);
   Circle(1077 , 1080-491, 17,  176,196,222);

   Circle(1124 , 1080-502,20,  105,53,156);
   Circle(1124 , 1080-502,17,  176,196,222);

   Circle(1169 , 1080-510, 20, 105,53,156);
   Circle(1169 , 1080-510, 17,  176,196,222);

   Circle(1217 , 1080-516, 20, 105,53,156);
   Circle(1217 , 1080-516, 17,  176,196,222);


    ///Door1
     float x6[]= {719, 751, 744, 712};
     float y6[]= {1080-407 ,1080-416, 1080-451, 1080-444 } ;
     polygon(x6,y6,4, 28,40,65);
     Circle(736, 1080-407, 17, 28,40,65);
     Circle(727, 1080-451, 17, 28,40,65);

      ///Door2
     float x7[]= {1296,1327,1319,1286};
     float y7[]= {1080-509 ,1080-520, 1080-558, 1080-553 } ;
     polygon(x7,y7,4, 28,40,65);

     Circle(1311.5, 1080-515, 17, 28,40,65);
     Circle(1302, 1080-557, 17, 28,40,65);



glPopMatrix();


}

void Runway()
{
float x[]= {0,0,1920,1920};
float y[]= {1080-877,1080-571, 1080-571,1080-877 } ;
polygonShade(x,y,4,151,154,170,105,105,105);

drawLineShade(0,1080-865, 1920, 1080-865 , 6, 238,255,27, 239,204,0);
drawLineShade(0,1080-591, 1920, 1080-591 , 6, 238,255,27, 239,204,0);



///Divider

for (int i=0; i<1920 ; i+=60 )
{
float x3[]= {i,i,i+34,i+34};
float y3[]= {1080-735,1080-721, 1080-721,1080-735 } ;
polygon(x3,y3,4,242,243,244);
}

}

///Airport
void Airport()
{
float x1a[]= {21,24,801,798};
float y1a[]= {1080-579, 1080-565, 1080-579,1080-565};
polygon(x1a,y1a, 4 ,25,25,112);

float x2a[]= {31,793,808,21};
float y2a[]= {1080-565, 1080-565, 1080-439,1080-439};
polygonShade(x2a,y2a, 4 ,112,128,144,135,206,250);

float x2b[]= {3,48,271,545};
float y2b[]= {1080-440, 1080-433, 1080-300,1080-440};
bezeirCurvePlot(x2b,y2b,172,229,238);



float x3b[]= {3+30,48+30,271-30,545-30};
float y3b[]= {1080-440, 1080-445, 1080-330,1080-440};
bezeirCurvePlot(x3b,y3b, 0,33,71);

float x4b[]= {3+30,48+30,271-30,545-30};
float y4b[]= {1080-440, 1080-448, 1080-355,1080-440};
bezeirCurvePlot(x4b,y4b,83,104,149);

drawLine(24,1080-565,798,1080-565 , 12, 119,139,165);
drawLine( 27,1080-565, 21, 1080-439, 7,119,139,165);
drawLine( 793,1080-565, 808, 1080-439, 7,119,139,165);
drawLineShade( 6,1080-439, 817, 1080-439, 7,119,139,165,135,206,250);

//Reflection Shapes
float xr1[]= {101,119,209,129};
float yr1[]= {1080-554,1080-554,1080-459,1080-459};
polygonShade(xr1,yr1,4, 176,224,230,188,212,230);

float xr2[]= {101+340,119+340,209+340,129+340};
float yr2[]= {1080-554,1080-554,1080-459,1080-459};
polygonShade(xr2,yr2,4, 176,224,230,188,212,230);

//Vertical Lines
drawLineShade( 76,1080-454, 81, 1080-553, 5,224,255,255,135,206,250);
drawLineShade( 81+63,1080-454, 81+65, 1080-553, 5,224,255,255, 135,206,250);
drawLineShade( 81+65+65,1080-454, 81+65+65, 1080-553, 5,224,255,255, 135,206,250);
drawLineShade( 81+65+65+65,1080-454, 81+65+65+65, 1080-553, 5,224,255,255, 135,206,250);
drawLineShade( 81+65+65+65+65,1080-454, 81+65+65+65+65, 1080-553, 5,224,255,255, 135,206,250);
drawLineShade( 81+65+65+65+65+65,1080-454, 81+65+65+65+65+65, 1080-553, 5,224,255,255, 135,206,250);
drawLineShade( 81+65+65+65+65+65+65,1080-454, 81+65+65+65+65+65+65, 1080-553, 5,224,255,255, 135,206,250);
drawLineShade( 81+65+65+65+65+65+65+65,1080-454, 81+65+65+65+65+65+65+65, 1080-553, 5,224,255,255, 135,206,250);
drawLineShade( 81+65+65+65+65+65+65+65+65,1080-454, 81+65+65+65+65+65+65+65+65, 1080-553, 5,224,255,255, 135,206,250);
drawLineShade( 81+65+65+65+65+65+65+65+65+65,1080-454, 81+65+65+65+65+65+65+65+65+63, 1080-553, 5,224,255,255, 135,206,250);
drawLineShade( 81+65+65+65+65+65+65+65+65+65+65,1080-454, 81+65+65+65+65+65+65+65+65+65+60, 1080-553, 5,224,255,255, 135,206,250);

//Horizontal Lines
drawLineShade( 51,1080-502, 493, 1080-502, 5,108,160,220,173,216,230);
drawLineShade( 541,1080-502, 765, 1080-502, 5,108,160,220,119,158,203);



}

///Surfaces
void Surface()
{
    ///Front Soil
float x1 []= {0,1920,1920,0};
float y1 []= {0,0,1080-876,1080-876};
polygonShade(x1,y1, 4 ,60,52,31,193,154,107);




///Back Grass
float x2 []= {0,1920,1920,0};
float y2 []= {1080-571,1080-571,1080-401-50,1080-401-50};
polygonShade(x2,y2, 4 ,178,236,93,46,139,87);

///Wall
float x31 []= {0,1920,1920,0};
float y31 []= {1080-401-50,1080-401-50,1080-355-50,1080-355-50};
polygonShade(x31,y31, 4 ,  203,65,84, 78,22,9);

float x32 []= {0,1920,1920,0};
float y32 []= {1080-401-55, 1080-401-55, 1080-355-55, 1080-355-55};
polygonShade(x32,y32, 4 ,203,65,84,163,38,56);


///Back Soil
float x4 []= {0,1920,1920,0};
float y4 []= {1080-355-50,1080-355-50, 1080-233-50,1080-233-50 };
polygonShade(x4,y4, 4 ,131,105,83,217,144,88);

///Sky
float x5 []= {0,1920,1920,0};
float y5 []= { 1080-233-50,1080-233-50 ,  1080, 1080};
polygonShade(x5,y5, 4 ,231,254,255,171,205,239);


}

void Tower()
{

    ///Body
    float x1[]= {507,545,535,517};
   float y1[]= {1080-585,1080-585,1080-363,1080-363};
   polygonShade(x1,y1, 4, 119,118,150,244,240,236);

    float x2[]= {463,595,604,455};
   float y2[]= {1080-363,1080-363,1080-340,1080-340};
   polygonShade(x2,y2, 4, 153,122,141,244,240,236);

    float x3[]= {455,503,547,604};
   float y3[]= {1080-340,1080-324,1080-324,1080-340};
   bezeirCurvePlot(x3, y3, 244,240,236);

   drawLineShade( 502, 1080-325, 548,  1080-325, 8,110,127,128, 65,74,76);

    float x4[]= {502,548 ,582,468};
   float y4[]= {1080-330+8,1080-330+8,1080-252,1080-252};
   polygonShade(x4, y4,4, 244,240,236, 76,81,109);

   drawLineShade( 468, 1080-317, 582,  1080-317, 10 ,196,174,173, 190,190,190);

   drawLineShade( 468, 1080-247, 582,  1080-247, 14 ,196,174,173, 190,190,190);


   ///Windows


   float x5[]= {463+9,595-10 ,604-10,455+9};
   float y5[]= {1080-363+5,1080-363+5,1080-343,1080-343};
   polygonShade(x5,y5, 4, 48,213,200,  185,242,255);

   float x6[]= {518,       533,      533,    518};
   float y6[]= {1080-502,1080-502,1080-484,1080-484};
   polygonShade(x6,y6, 4,   48,213,200,  185,242,255);

    float x7[]= {518,       533,      533,    518};
   float y7[]= {1080-502-70,1080-502-70,1080-484-70,1080-484-70};
   polygonShade(x7,y7, 4,   48,213,200,  185,242,255);

     float x8[]= {518,       533,      533,    518};
   float y8[]= {1080-502+70,1080-502+70,1080-484+70,1080-484+70};
   polygonShade(x8,y8, 4,   48,213,200,  185,242,255);


 ///Radars
 float xr1 [] = {497-10,503-10,500-10};
  float yr1 [] = {1080-240,1080-240,1080-169};
  polygonShade(xr1, yr1, 3, 128,128,128,242,243,244);

   float xr2 [] = {497+30,503+30,500+30};
  float yr2 [] = {1080-240,1080-240,1080-169};
  polygonShade(xr2, yr2, 3, 128,128,128,242,243,244);

   float xr3 [] = {497+60,503+60,500+60};
  float yr3 [] = {1080-240,1080-240,1080-169};
  polygonShade(xr3, yr3, 3, 128,128,128,242,243,244);

}

void Bus()
{
    glPushMatrix();
    glTranslatef(BusX, 0,0);

    ///Body
    float x1[]= {1528,    1559,    1846,     1846,    1858,    1856,     1845,    1578,   1557,    1528};
    float y1[]={1080-573,1080-576,1080-576,1080-558,1080-560,1080-508, 1080-505,1080-505,1080-492,1080-492};
    polygonShade(x1, y1 ,10, 242,243,244,172,172,172 );
    Circle(1845, 1080-564, 12, 172,172,172);


    ///Wheels
    Circle(1625, 1080-571, 20, 16,12,8);
    Circle(1625, 1080-571, 15, 151,154,170);
    Circle(1625, 1080-571, 8, 65,74,76);
    Circle(1625, 1080-571, 3, 0,0,0);

    Circle(1785, 1080-571, 20, 16,12,8);
  Circle(1785, 1080-571, 15, 151,154,170);
  Circle(1785, 1080-571, 8, 65,74,76);
  Circle(1785, 1080-571, 3, 0,0,0);

  ///Windows and doors
   float x2[]= {1534, 1804,1804,1534};
    float y2[]={1080-548,1080-548, 1080-513, 1080-513};
    polygonShade(x2,y2, 4, 0,0,128, 100,149,237);

    float x3[] ={1563, 1600, 1600, 1563};
    float y3[]= {1080-575,1080-575,1080-513,1080-513};
     polygonShade(x3,y3, 4, 164,221,237, 0,204,255);

     float x4[] ={1563+90, 1600+90, 1600+90, 1563+90};
    float y4[]= {1080-575,1080-575,1080-513,1080-513};
     polygonShade(x4,y4, 4, 164,221,237, 0,204,255);


     float x5[] ={1563+90+152, 1600+90+152, 1600+90+152, 1563+90+152};
    float y5[]= {1080-575,1080-575,1080-513,1080-513};
     polygonShade(x5,y5, 4, 164,221,237, 0,204,255);


      float x6[] ={1849,1857,1857,1849};
    float y6[]= {1080-555,1080-560,1080-511,1080-527};
     polygonShade(x6,y6, 4, 155,221,255, 164,244,249);

     drawLineShade(1554, 1080-565 ,1554+7, 1080-565, 5, 255,255,0, 254,254,51);

     drawLineShade(1554+150, 1080-565 ,1554+7+150, 1080-565, 5, 255,255,0, 254,254,51);

      drawLineShade(1856.5, 1080-565 ,1858-12, 1080-565, 6, 255,255,0, 254,254,51);

      drawLine(1581.5,1080-575,1581.5,1080-513, 1, 35,43,43);
      drawLine(1581.5+90,1080-575,1581.5+90,1080-513, 1, 35,43,43);
      drawLine(1581.5+90+152,1080-575,1581.5+90+152,1080-513, 1, 35,43,43);

      drawLineShade(1600,1080-502,1600+50,1080-502,7, 255,240,245, 251,160,227);

      drawLineShade(1600+150,1080-502,1600+50+150,1080-502,7, 255,240,245, 251,160,227);

   glPopMatrix();
}

void Truck()
{ glPushMatrix();

glTranslatef( TruckX,0,0);
 ///Body
float x1[]= {372,412,543,548,548,531,378,372,367,367};
float y1[]= {1080-585,1080-585,1080-585,1080-580,1080-549,1080-545,1080-545,1080-562,1080-562,1080-571};
polygonShade( x1,y1, 10,220,220,220, 176,224,230);

float x3[]= {413,460,460,446,427,413};
float y3[]= {1080-585,1080-585,1080-560,1080-549,1080-549,1080-560};
polygon( x3,y3, 6,117,117,117);

float x4[]= {413+74,460+74,460+74,446+74,427+74,413+74};
float y4[]= {1080-585,1080-585,1080-560,1080-549,1080-549,1080-560};
polygon( x4,y4, 6,117,117,117);

float x6[]= {367,371,367};
float y6[]= {1080-583,1080-583,1080-571};
polygon( x6,y6, 3,105,105,105);

float x7[]= {467,479,479,467};
float y7[]= {1080-584,1080-584,1080-576,1080-576};
polygonShade( x7,y7, 4,112,128,144,153,122,141);

///Wheels
Circle(436,1080-570, 21, 0,0,0);
Circle(436,1080-570, 11, 172,172,172);
Circle(436,1080-570, 6, 105,105,105);
Circle(436,1080-570, 2, 0,0,0);

Circle(510,1080-570, 21, 0,0,0);
Circle(510,1080-570, 11, 172,172,172);
Circle(510,1080-570, 6, 105,105,105);
Circle(510,1080-570, 2, 0,0,0);

///Windows
float x2[]= {376,407,407,379};
float y2[]= {1080-560,1080-560,1080-546,1080-546};
polygonShade( x2,y2, 4,152,152,152, 105,105,105);

float x5[]= {411,423,411};
float y5[]= {1080-560,1080-548,1080-548};
polygonShade( x5,y5, 3,152,152,152, 105,105,105);

drawLine(373, 1080-562, 373, 1080-584, 1, 0,0,0);
drawLineShade(364, 1080-582, 367, 1080-582, 5, 255,0,0,  255,110,74);
drawLineShade(370, 1080-566, 370, 1080-569, 5, 255,0,0,  255,110,74);
drawLineShade(550, 1080-570, 550, 1080-581, 5, 255,0,0,  255,110,74);
drawLineShade(402, 1080-565, 409, 1080-565, 5, 112,128,144,  112,128,144);

Circle(391,1080-544,3,238,255,27);

glPopMatrix();

}


void FrontFacingPlane()
{


    ///small wing 1
    float x1[] = {68,144,144,70};
    float y1[] = {1080-538,1080-554,1080-544,1080-536};
    polygonShade( x1, y1 , 4, 31,117,254,51,51,153);

     ///small wing 2
     float x2[] = {211,285,285,210};
    float y2[] = {1080-553,1080-538,1080-535,1080-544};
    polygonShade( x2, y2 , 4, 31,117,254,51,51,153);




     ///Big wing 1
    float x3[] = {29,141,141,30};
    float y3[] = {1080-568,1080-584,1080-565,1080-565};
    polygonShade( x3, y3 , 4, 72,61,139,29,41,81);


      ///Big wing 2
        float x4[] = {213,323,324,212};
    float y4[] = {1080-584,1080-569,1080-565,1080-565};
    polygonShade( x4, y4 , 4, 72,61,139,29,41,81);

     ///Upper Wing
float x5[] = {172,182,178,175};
    float y5[] = {1080-525,1080-525,1080-451,1080-451};
    polygonShade( x5, y5 , 4, 3,80,150,35,41,122);

    ///Fans

    Circle(73,1080-587, 18, 178,190,181);
    Circle(73,1080-587, 12, 83,104,114);

    Circle(282,1080-587, 18, 178,190,181);
    Circle(282,1080-587, 12, 83,104,114);

      ///Legs & Wheels
     drawLine(236,1080-581,236,1080-604,5, 0,0,0);
     drawLine(117,1080-581,117,1080-604,5, 0,0,0);

     drawLine(112,1080-612,122,1080-612,5, 0,0,0);
     drawLine(232,1080-612,242,1080-612,5, 0,0,0);
     drawLine(230,1080-606,230,1080-618,5, 0,0,0);
     drawLine(117,1080-581,117,1080-604,5, 0,0,0);
     drawLine(244,1080-606,244,1080-618,5, 0,0,0);
     drawLine(117,1080-604,117,1080-609,2, 0,0,0);
     drawLine(117,1080-605,117,1080-610,2, 0,0,0);

     drawLine(110,1080-606,110,1080-618,5, 0,0,0);
     drawLine(124,1080-606,124,1080-618,5, 0,0,0);

      drawLine(236,1080-612,236,1080-602,2, 0,0,0);



      ///Body
     Circle(153,1080-575,17,128,128,128);
     Circle(200,1080-575,17,128,128,128);
    Circle(176,1080-561,36,169,169,169);
    HalfCircle(176,1080-561,36,229,228,226);

     Circle(176,1080-561,13,95,158,160);
    HalfCircle(176,1080-561,13,150,200,162);

    ///Window

    float x6[]={153,161,192,202};
    float y6[]= {1080-544,1080-536,1080-536,1080-544};
    bezeirLinePlot(x6,y6,5 ,105,105,105);


}


void cloud1()
{
    glPushMatrix();
    glTranslatef(C1x,0,0);
 //cloud 1
    Circle(75,1080-40-30,20,240,255,255);
    Circle(90,1080-26-30,20,240,255,255);
    Circle(100,1080-40-30,15,240,255,255);
    Circle(113,1080-38-30,20,240,255,255);

    glPopMatrix();
}

void cloud2()
{
     glPushMatrix();
    glTranslatef(C2x,0,0);
//cloud 2
    Circle(202,1080-90-35,30,255,255,255);
    Circle(227,1080-75-35,30,255,255,255);
    Circle(248,1080-90-35,25,255,255,255);
    Circle(230,1080-75-35,30,255,255,255);

    glPopMatrix();
}

void cloud3()
{
    glPushMatrix();
    glTranslatef(C3x,0,0);
 //cloud 3
    Circle(540,1080-60-35,25,255,255,255);
    Circle(565,1080-45-35,25,255,255,255);
    Circle(585,1080-60-35,20,255,255,255);
    Circle(590,1080-55-35,20,255,255,255);
    Circle(565,1080-75-35,15,255,255,255);

    glPopMatrix();
}

void cloud4()
{
      glPushMatrix();
    glTranslatef(C4x,0,0);
    //cloud 4
    Circle(795,1080-87-35,35,240,248,255);
    Circle(825,1080-75-35,35,240,248,255);
    Circle(848,1080-90-35,30,240,248,255);
    Circle(860,1080-75-35,35,240,248,255);

    glPopMatrix();

}

void cloud5()
{
    glPushMatrix();
    glTranslatef(C5x,0,0);
    //cloud 5
    Circle(1140,1080-40-25,35,240,255,255);
    Circle(1180,1080-26-20,35,240,255,255);
    Circle(1185,1080-40-30,30,240,255,255);
    Circle(1230,1080-38-20,30,240,255,255);

    glPopMatrix();

}

void cloud6()
{
    glPushMatrix();
    glTranslatef(C6x,0,0);
    //cloud 6
    Circle(1600,1080-40-20,30,240,248,255);
    Circle(1630,1080-26-15,30,240,248,255);
    Circle(1645,1080-40-30,25,240,248,255);
    Circle(1670,1080-38-20,30,240,248,255);
    glPopMatrix();


}





//mini chopper
void miniChopper()
{
    glPushMatrix();
    glTranslatef(Hx,0,0);


    //body
    Circle(430,1080-44,20,105,105,105);

    float b1 []= {418,320,418};
    float b2 []= {1080-28, 1080-48, 1080-60};
    polygon (b1,b2,3,105,105,105 );

    //stand
    float s1 []= {430,432,432,430};
    float s2 []= {1080-64, 1080-64, 1080-70,1080-70};
    polygon (s1,s2,4,61,64,53 );

    float s3 []= {421,441,441,421};
    float s4 []= {1080-70, 1080-70, 1080-73,1080-73};
    polygon (s3,s4,4,61,64,53 );

    //upper fan
    float f1 []= {430,470,480};
    float f2 []= {1080-28, 1080, 1080-10};
    polygon (f1,f2,3,61,64,53 );

    float f3 []= {430,475,463};
    float f4 []= {1080-28, 1080-58, 1080-65};
    polygon (f3,f4,3,61,64,535 );

    float f5 []= {430,405,390};
    float f6 []= {1080-28, 1080, 1080-5};
    polygon (f5,f6,3,61,64,53 );

    float f7 []= {430,400,410};
    float f8 []= {1080-26, 1080-50, 1080-60};
    polygon (f7,f8,3,61,64,53 );

    Circle(430,1080-28,5,255,255,255);

    //door
    float d1 []= {432,436,436,432};
    float d2 []= {1080-40, 1080-40, 1080-48,1080-48};
    polygon (d1,d2,4,255,255,255 );

    //lower fan
    float l1 []= {324,334,325};
    float l2 []= {1080-48, 1080-30,1080-30};
    polygon (l1,l2,3,61,64,53 );

    float l3 []= {326,306,306};
    float l4 []= {1080-48, 1080-40,1080-50};
    polygon (l3,l4,3,61,64,53 );

    float l5 []= {326,324,334};
    float l6 []= {1080-48, 1080-68,1080-67};
    polygon (l5,l6,3,61,64,53 );

    Circle(326,1080-48,3,255,255,255);

    glPopMatrix();
}


void comboHill01 ()
{

    /// hill3
    float xh2[] = { 60 ,155,280};
    float yh2[] = {1080-285, 1080 - 90, 1080 - 285};
    hills(xh2,yh2,3,18,53,36,18,53,36);
      /// hill2
    float xh3[] = { 70 ,190,205,280};
    float yh3[] = {1080-285, 1080 - 190, 1080 - 125,1080-285};
    hills(xh3,yh3,4, 102,176,50, 53,94,59  );

     /// hills 1
    float x[] = { 0 , 30,40,90,100,180};
    float y[]=  {1080 - 285, 1080 - 210, 1080 - 220, 1080-190,1080-150,1080 - 285};
    hills(x,y,6,25,89,5,86,130,3);

}






void comboHill02 ()
{

    /// hill3
    float xh2[] = { 310 ,390,410, 440, 460, 520};
    float yh2[] = {1080-285, 1080 - 110, 1080 - 100, 1080 - 90,1080 - 120,1080 - 285};
    hills(xh2,yh2,6,25,89,5,86,130,3);
    /// hill2
    float xh3[] = { 400 ,440,447,510,520, 530,540,557,582,587,600};
    float yh3[] = {1080-285, 1080 - 220, 1080 -190 ,1080-140 , 1080 - 140, 1080 - 135,1080-135,1080-180,1080-218,1080-241,1080-285};
    hills(xh3,yh3,11, 5,144,51,30,77,43);

    /// hills 1.2
    float x1[] = { 333 , 359,383,435,445,470};
    float y1[]=  {1080-285, 1080 - 190, 1080 -210 ,1080 -230,1080 -250,1080-285};
    hills(x1,y1,6,5,144,51,30,77,43);

    /// hills 1
    float x[] = { 280 , 300,330,333,393,420};
    float y[]=  {1080-285, 1080 - 190, 1080 -160 ,1080 -160,1080 -230,1080-285};
    hills(x,y,6,34,139,34,79,121,66);

}

void comboHill03 ()
{

    /// hill3
    float xh2[] = { 60+600 ,155+600,280+600};
    float yh2[] = {1080-285, 1080 - 90, 1080 - 285};
    hills(xh2,yh2,3,1,50,3,1,68,33);
    /// hill2
    float xh3[] = { 70+600 ,190+600,205+600,280+600};
    float yh3[] = {1080-285, 1080 - 190, 1080 - 125,1080-285};
    hills(xh3,yh3,4, 5,144,51,30,77,43);

    /// hills 1
    float x[] = { 0+600 , 30+600,40+600,90+600,100+600,180+600};
    float y[]=  {1080 - 285, 1080 - 210, 1080 - 220, 1080-190,1080-150,1080 - 285};
    hills(x,y,6,25,89,5,86,130,3);

}


void comboforest ()
{

    /// big trees 1
    float b [] = {920 , 1020, 1120};
    float a [] = {1080-285,1080-130 , 1080-285};
    polygonShade(b,a,3,25,89,5,86,130,3);

    ///medium tree1
    float X [] = {880 , 940,1000};
    float Y [] = {1080 - 285, 1080 - 150 , 1080 -285};
    polygonShade(X,Y,3 ,27,77,62,0,86,63);

    ///small tree 1
    float x [] = {860 ,890, 920 };
    float y [] = {1080-285, 1080-220, 1080 - 285};
    polygonShade(x,y,3,25,89,5,86,130,3);



    /// big trees 2
    float b1 [] = {920+150 , 1020+150, 1120+150};
    float a1 [] = {1080-285,1080-130 , 1080-285};
    polygonShade(b1,a1,3,59,122,87,0,153,0);

    ///medium tree2
    float X1 [] = {880+150 , 940+150,1000+150};
    float Y1 [] = {1080 - 285, 1080 - 150 , 1080 -285};
    polygonShade(X1,Y1,3 ,23,114,69,0,153,0);

    ///small tree 2
    float x1 [] = {860+150 ,890+150, 920+150 };
    float y1 [] = {1080-285, 1080-220, 1080 - 285};
    polygonShade(x1,y1,3,59,122,87,0,153,0);




    /// big trees 3
    float b2 [] = {920+300 , 1020+300, 1120+300};
    float a2 [] = {1080-285,1080-130 , 1080-285};
    polygonShade(b2,a2,3,59,122,87,0,153,0);
    ///medium tree3
    float X2 [] = {880+300 , 940+300,1000+300};
    float Y2 [] = {1080 - 285, 1080 - 150 , 1080 -285};
    polygonShade(X2,Y2,3 ,42,128,0,86,130,3);
    ///small tree 1
    float x2 [] = {860+300 ,890+300, 920+300 };
    float y2 [] = {1080-285, 1080-220, 1080 - 285};
    polygonShade(x2,y2,3,25,89,5,86,130,3);



    /// big trees 4
    float b3 [] = {920+450 , 1020+450, 1120+450};
    float a3 [] = {1080-285,1080-130 , 1080-285};
    polygonShade(b3,a3,3,53,94,59,80,125,42);
    ///medium tree4
    float X3 [] = {880+450 , 940+450,1000+450};
    float Y3 [] = {1080 - 285, 1080 - 150 , 1080 -285};
    polygonShade(X3,Y3,3 ,27,77,62,0,86,63);

     ///small tree 4
    float x3 [] = {860+450 ,890+450, 920+450 };
    float y3 [] = {1080-285, 1080-220, 1080 - 285};
    polygonShade(x3,y3,3,25,89,5,86,130,3);


    ///medium tree5
    float X4 [] = {880+600 , 940+600,1000+600};
    float Y4 [] = {1080 - 285, 1080 - 150 , 1080 -285};
    polygonShade(X4,Y4,3 ,25,89,5,86,130,3);

    ///small tree 5
    float x4 [] = {860+600 ,890+600, 920+600 };
    float y4 [] = {1080-285, 1080-220, 1080 - 285};
    polygonShade(x4,y4,3,25,89,5,86,130,3);

}


void buildings1 ()
{
  ///building 1
  /// body
    float b1 []= {1250 ,1250,1370,1370};
    float b2 []= {1080 - 405, 1080-150 , 1080-150, 1080-405};
    polygonShade (b1,b2,4,255,221,202, 221,173,175 );
  ///TOP
    float T1 []= {1245 ,1245,1375,1375};
    float T2 []= {1080 - 165, 1080-150 , 1080-150, 1080-165};
    polygonShade (T1,T2,4,112,128,144,105,105,105 );
   ///WINDOW LEFT 1
    float WL1 []= {1260 ,1260,1290,1290};
    float Wl1 []= {1080 - 185, 1080-215 , 1080-215, 1080-185};
    polygonShade (WL1,Wl1,4,131,105,83,60,52,31 );
    ///WINDOW LEFT 2
    float WL2 []= {1260 ,1260,1290,1290};
    float Wl2 []= {1080 - 185-60, 1080-215-60 , 1080-215-60, 1080-185-60};
    polygonShade (WL2,Wl2,4,131,105,83,60,52,31);
     ///WINDOW LEFT 3
    float WL3 []= {1260 ,1260,1290,1290};
    float Wl3 []= {1080 - 185-120, 1080-215-120 , 1080-215-120, 1080-185-120};
    polygonShade (WL3,Wl3,4,131,105,83,60,52,31 );
     ///WINDOW LEFT 4
    float WL4 []= {1260 ,1260,1290,1290};
    float Wl4 []= {1080 - 185-180, 1080-215-180 , 1080-215-180, 1080-185-180};
    polygonShade (WL4,Wl4,4,131,105,83,60,52,31 );


    ///WINDOW RIGHT 1
    float WR1 []= {1330 ,1330,1360,1360};
    float Wr1 []= {1080 - 185, 1080-215 , 1080-215, 1080-185};
    polygonShade (WR1,Wr1,4,131,105,83,60,52,31 );
     ///WINDOW RIGHT 2
    float WR2 []= {1330 ,1330,1360,1360};
    float Wr2 []= {1080 - 185-60, 1080-215-60 , 1080-215-60, 1080-185-60};
    polygonShade (WR2,Wr2,4,131,105,83,60,52,31 );
     ///WINDOW RIGHT 3
    float WR3 []= {1330 ,1330,1360,1360};
    float Wr3 []= {1080 - 185-120, 1080-215-120 , 1080-215-120, 1080-185-120};
    polygonShade (WR3,Wr3,4,131,105,83,60,52,31 );
    ///WINDOW RIGHT 4
    float WR4 []= {1330 ,1330,1360,1360};
    float Wr4 []= {1080 - 185-180, 1080-215-180 , 1080-215-180, 1080-185-180};
    polygonShade (WR4,Wr4,4,131,105,83,60,52,31 );



}


void buildings2 ()
{
  ///building 2
  /// body
    float b1 []= {1320 ,1320,1410,1410};
    float b2 []= {1080 - 405, 1080-90 , 1080-90, 1080-405};
    polygon (b1,b2,4,102,102,153 );

        ///SHADOW
    float sh1[] = {1380,1380,1410,1410 };
    float sh2 []= { 1080 - 405, 1080-90 , 1080-90, 1080-405};
    polygon (sh1,sh2,4,76,81,109 );

  ///TOP
    float T1 []= {1315 ,1315,1415,1415};
    float T2 []= {1080 - 100, 1080-90 , 1080-90, 1080-100};
    polygon (T1,T2,4,128,128,128 );

      ///TOPshadow
    float Ts1 []= {1380,1380,1415,1415};
    float Ts2 []= {1080 - 100, 1080-90 , 1080-90, 1080-100};
    polygon (Ts1,Ts2,4,105,105,105 );
  ///WINDOW LEFT 1
    float WH1 []= {1330 ,1330,1400,1400};
    float Wh1 []= {1080 - 150, 1080-130 , 1080-130, 1080-150};
    polygon (WH1,Wh1,4,59,68,75 );
    ///WINDOW LEFT 2
    float WH2 []= {1330 ,1330,1400,1400};
    float Wh2 []= {1080 - 150-40, 1080-130-40 , 1080-130-40, 1080-150-40};
    polygon (WH2,Wh2,4,59,68,75 );
    ///WINDOW LEFT 3
    float WH3 []= {1330 ,1330,1400,1400};
    float Wh3 []= {1080 - 150-80, 1080-130-80 , 1080-130-80, 1080-150-80};
    polygon (WH3,Wh3,4,59,68,75 );
   ///WINDOW LEFT 4
    float WH4 []= {1330 ,1330,1400,1400};
    float Wh4 []= {1080 - 150-120, 1080-130-120 , 1080-130-120, 1080-150-120};
    polygon (WH4,Wh4,4,59,68,75 );
    ///WINDOW LEFT 4
    float WH5 []= {1330 ,1330,1400,1400};
    float Wh5 []= {1080 - 150-160, 1080-130-160 , 1080-130-160, 1080-150-160};
    polygon (WH5,Wh5,4,59,68,75 );
        ///WINDOW LEFT 4
    float WH6 []= {1330 ,1330,1400,1400};
    float Wh6 []= {1080 - 150-200, 1080-130-200 , 1080-130-200, 1080-150-200};
    polygon (WH6,Wh6,4,59,68,75 );
        ///WINDOW LEFT 4
    float WH7 []= {1330 ,1330,1400,1400};
    float Wh7 []= {1080 - 150-240, 1080-130-240 , 1080-130-240, 1080-150-240};
    polygon (WH7,Wh7,4,59,68,75 );






}

void buildings3 ()
{
  ///building 3
  /// body
    float b1 []= {1415,1415,1580,1580};
    float b2 []= {1080 - 405, 1080-150 , 1080-150, 1080-405};
    polygonShade (b1,b2,4,255,204,51,228,208,10 );
  ///TOP
    float T1 []= {1410,1410,1585,1585};
    float T2 []= {1080 - 140, 1080-155 , 1080-155, 1080-140};
    polygonShade (T1,T2,4,132,132,130,61,64,53);

     ///WINDOW LEFT 1
    float WH1 []= {1425 ,1425,1573,1573};
    float Wh1 []= {1080 - 180, 1080-210 , 1080-210, 1080-180};
    polygon (WH1,Wh1,4,59,68,75 );
    ///WINDOW LEFT 2
    float WH2 []=  {1425 ,1425,1573,1573};
    float Wh2 []= {1080 - 180-60, 1080-210-60 , 1080-210-60, 1080-180-60};
    polygon (WH2,Wh2,4,59,68,75 );
    ///WINDOW LEFT 3
    float WH3 []= {1425 ,1425,1573,1573};
    float Wh3 []= {1080 - 180-120, 1080-210-120 , 1080-210-120, 1080-180-120};
    polygon (WH3,Wh3,4,59,68,75 );
   ///WINDOW LEFT 4
    float WH4 []= {1425 ,1425,1573,1573};
    float Wh4 []= {1080 - 180-180, 1080-210-180 , 1080-210-180, 1080-180-180};
    polygon (WH4,Wh4,4,59,68,75 );
    ///border 4
    float WH5 []= {1425+30,1425+30,1415+60,1415+60};
    float Wh5 []= {1080 - 405, 1080-155 , 1080-155, 1080-405};
    polygonShade (WH5,Wh5,4,153,101,21,255,196,12 );

        ///border 5
    float WH6 []= {1425+90,1425+90,1415+120,1415+120};
    float Wh6 []= {1080 - 405, 1080-155 , 1080-155, 1080-405};
    polygonShade (WH6,Wh6,4,153,101,21,255,196,12);


}

void buildings4 ()
{
  ///building 2
  /// body
    float b1 []= {1580 ,1580,1730,1730};
    float b2 []= {1080 - 405, 1080-110 , 1080-110, 1080-405};
    polygonShade (b1,b2,4,32,178,170, 10,126,140 );

    ///WINDOW 1
        float WH1 []= {1590 ,1590,1720,1720};
    float Wh1 []= {1080 - 140, 1080-160 , 1080-160, 1080-140};
    polygonShade (WH1,Wh1,4,132,132,130,0,0,0 );

       ///WINDOW 2
        float WH2 []= {1590 ,1590,1720,1720};
    float Wh2 []= {1080 - 140-40, 1080-160-40 , 1080-160-40, 1080-140-40};
    polygonShade (WH2,Wh2,4,132,132,130,0,0,0 );

           ///WINDOW 3
        float WH3 []= {1590 ,1590,1720,1720};
    float Wh3 []= {1080 - 140-80, 1080-160-80 , 1080-160-80, 1080-140-80};
    polygonShade (WH3,Wh3,4,132,132,130,0,0,0 );

               ///WINDOW 4
        float WH4 []= {1590 ,1590,1720,1720};
    float Wh4 []= {1080 - 140-120, 1080-160-120 , 1080-160-120, 1080-140-120};
    polygonShade (WH4,Wh4,4,132,132,130,0,0,0 );

                   ///WINDOW 5
        float WH5 []= {1590 ,1590,1720,1720};
    float Wh5 []= {1080 - 140-160, 1080-160-160 , 1080-160-160, 1080-140-160};
    polygonShade (WH5,Wh5,4,132,132,130,0,0,0 );

                   ///WINDOW 4
        float WH6 []= {1590 ,1590,1720,1720};
    float Wh6 []= {1080 - 140-200, 1080-160-200 , 1080-160-200, 1080-140-200};
    polygonShade (WH6,Wh6,4,132,132,130,0,0,0 );


}

void buildings5 ()
{
  ///building 2
  /// body
    float b1 []= {1730 ,1730,1880,1880};
    float b2 []= {1080 - 405, 1080-80 , 1080-80, 1080-405};
    polygonShade (b1,b2,4,203,65,84,112,28,28 );

    ///WINDOW 1
    float WH1 []= {1740 ,1740,1870,1870};
    float Wh1 []= {1080 - 120, 1080-140 , 1080-140, 1080-120};
    polygonShade (WH1,Wh1,4,145,163,176, 102,102,153);

        ///WINDOW 2
    float WH2 []= {1740 ,1740,1870,1870};
    float Wh2 []= {1080 - 120-50, 1080-140-50 , 1080-140-50, 1080-120-50};
    polygonShade (WH2,Wh2,4,145,163,176, 102,102,153);

        ///WINDOW 3
    float WH3 []= {1740 ,1740,1870,1870};
    float Wh3 []= {1080 - 120-100, 1080-140-100 , 1080-140-100, 1080-120-100};
    polygonShade (WH3,Wh3,4,145,163,176, 102,102,153 );

        ///WINDOW 4
    float WH4 []= {1740 ,1740,1870,1870};
    float Wh4 []= {1080 - 120-150, 1080-140-150 , 1080-140-150, 1080-120-150};
    polygonShade (WH4,Wh4,4,145,163,176, 102,102,153 );

        ///WINDOW 5
    float WH5 []= {1740 ,1740,1870,1870};
    float Wh5 []= {1080 - 120-200, 1080-140-200 , 1080-140-200, 1080-120-200};
    polygonShade (WH5,Wh5,4,145,163,176, 102,102,153);

            ///WINDOW 6
    float WH6 []= {1740 ,1740,1870,1870};
    float Wh6 []= {1080 - 120-250, 1080-140-250 , 1080-140-250, 1080-120-250};
    polygonShade (WH6,Wh6,4,145,163,176, 102,102,153);



}







void Grass()
{


 for(int i=-150; i<1920; i=i+18)
 {
 float x3 []= {118+i, 101+i,109+i,135+i};
 float y3 []= {1080-1080, 1080-957,1080-950,1080-910};

 bezeirCurvePlot(x3, y3,13,94,59);
 }

for(int i=-150; i<1920; i=i+28)
 {
 float x1 []= {104+i, 120+i,142+i,184+i};
 float y1 []= {1080-1080, 1080-990+30,1080-980+30,1080-1080};

 bezeirCurvePlot(x1, y1, 119,221,119);
 }



 for(int i=-50; i<1920; i=i+28)
 {
 float x2 []= {49+i, 38+i,27+i,3+i};
 float y2 []= {1080-1080, 1080-990,1080-960,1080-900};

 bezeirCurvePlot(x2, y2, 0,171,102);
 }


 for(int i=-50; i<1920; i=i+260)
 {

 float x1[]= {0+i,64+i,118+i,201+i};
  float y1[]= { 1080- 1080, 1080-1022, 1080-1053, 1080-1078};
bezeirLinePlot(x1,y1, 60, 60,179,113);

 }

  for(int i=-100; i<2020; i=i+120)
 {

 float x1[]= {0+i,64+i,118+i,201+i};
  float y1[]= { -50, 1080-1055, 1080-1040, -50};
bezeirLinePlot(x1,y1, 35, 48,96,48);

 }





}


void CraneBody()
{
    drawLineShade(103,1080-412,103,1080-200,4,105,105,105,52,52,52);
    drawLineShade(122,1080-412,122,1080-200,4,105,105,105,52,52,52);
    drawLineShade(102,1080-200,123,1080-200,4,105,105,105,52,52,52);
///Pillar
    drawLineShade(103,1080-412,122,1080-412-17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412,122,1080-412+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17,122,1080-412+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17,122,1080-412+17+17+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17+17+17,122,1080-412+17+17+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17+17+17,122,1080-412+17+17+17+17+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17+17+17+17+17,122,1080-412+17+17+17+17+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17+17+17+17+17,122,1080-412+17+17+17+17+17+17+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17+17+17+17+17+17+17,122,1080-412+17+17+17+17+17+17+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17+17+17+17+17+17+17,122,1080-412+17+17+17+17+17+17+17+17+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17+17+17+17+17+17+17+17+17,122,1080-412+17+17+17+17+17+17+17+17+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17+17+17+17+17+17+17+17+17,122,1080-412+17+17+17+17+17+17+17+17+17+17+17,3,105,105,105,52,52,52);
    drawLineShade(103,1080-412+17+17+17+17+17+17+17+17+17+17+17+17,122,1080-412+17+17+17+17+17+17+17+17+17+17+17,3,105,105,105,52,52,52);



}

CraneHandle()
{
    glPushMatrix();
   glTranslatef(0,CraneY,0);

   drawLineShade(120,1080-122-80,232,1080-165-72, 4,105,105,105,52,52,52);
    drawLineShade(64,1080-162-75,100,1080-127-80, 4,105,105,105,52,52,52);


    drawLineShade(48,1080-196-65,256,1080-196-65,4,211,211,211,169,169,169);
    drawLineShade(256,1080-165-68,48,1080-165-68,4,211,211,211,169,169,169);

    drawLineShade(48,1080-165-68,48,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(256,1080-165-68,256,1080-196-68,4,211,211,211,169,169,169);


    drawLineShade(48,1080-165-68,48+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17,1080-165-68,48+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17,1080-165-68,48+17+17+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17+17+17,1080-165-68,48+17+17+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17+17+17,1080-165-68,48+17+17+17+17+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17+17+17+17+17,1080-165-68,48+17+17+17+17+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17+17+17+17+17,1080-165-68,48+17+17+17+17+17+17+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17+17+17+17+17+17+17,1080-165-68,48+17+17+17+17+17+17+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17+17+17+17+17+17+17,1080-165-68,48+17+17+17+17+17+17+17+17+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17+17+17+17+17+17+17+17+17,1080-165-68,48+17+17+17+17+17+17+17+17+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17+17+17+17+17+17+17+17+17,1080-165-68,48+17+17+17+17+17+17+17+17+17+17+17,1080-196-68,4,211,211,211,169,169,169);
    drawLineShade(48+17+17+17+17+17+17+17+17+17+17+17+17,1080-165-68,48+17+17+17+17+17+17+17+17+17+17+17,1080-196-68,4,211,211,211,169,169,169);

  float x1 []= {98,125,141,98};
  float y1 []= {1080-196-70,1080-196-70,1080-153-70,1080-153-70};
  polygonShade(x1,y1, 4,255,255,49, 255,225,53);

  float x2 []= {98+5,125-5,141-10,98+5};
  float y2 []= {1080-196-70+5,1080-196-70+5,1080-153-70-5,1080-153-70-5};
  polygonShade(x2,y2, 4,224,255,255, 0,255,255);




   // drawLineShade(249,1080-184,248,1080-242, 4,105,105,105,52,52,52);
    Circle(249,1080-243-30,5, 0,0,0);

    float x11[]= {250,243,250,255};
    float y11[]={1080-246-30,1080-264-30,1080-280-30,1080-265-30};
    bezeirLinePlot(x11,y11, 3, 0,0,0);

    float x12[]={220,274,274,220};
    float y12[]= {1080-326-30,1080-326-30,1080-279-30,1080-279-30};
    polygonShade(x12,y12, 4, 205,92,92,124,72,72);

    drawLine(266,1080-279-30,253, 1080-265-30,2,0,0,0);
    drawLine(225,1080-279-30,246,1080-265-30, 2,0,0,0);

    drawLine(249,1080-243-15 ,249,1080-243-30, 2,0,0,0);

    drawLine(220,1080-356,273,1080-314, 5, 186,135,89);
     drawLine(273,1080-356,220,1080-314, 5, 186,135,89);


glPopMatrix();

}






void display()
{



Surface();

Runway();


cloud1();
cloud2();
cloud3();
cloud4();
cloud5();
cloud6();

comboHill01();
comboHill02 ();
comboHill03 ();
comboforest();

Bus();




CraneBody();
CraneHandle();

Airport();
Grass();



buildings2 ();
buildings1 ();
buildings3 ();
buildings4 ();
buildings5 ();

Tower();
Truck();
FrontFacingPlane();


miniChopper();

Airplane();




//glFlush();
glutSwapBuffers();


}


void Animation()
{
 time2= GetTickCount();




if(time2- time1 > 1000/60.0)
{
 time1=time2;

///MiniChopper
    Hx+=10;
    if(Hx>1700 )
    {
       Hx= -450;
    }


///Airplane
    Px-=25;

    PAngle += 0.08;

    if(Px < -1700)
    {
         PAngle =0;
        Px = 1300;
        Py=0;

    }


///CLOUDS


    C1x+=2.5;
    if(C1x>1500)
    {
        C1x= 500;
    }
     C2x-=1.5;
    if(C2x<-600)
    {
        C2x= 1800;
    }

    C3x += 1.5;
 if(C3x> 1500)
    {
        C3x= -600;
    }

    C4x -= 1.4;
    if(C4x< -900)
    {
        C4x= 1800;
    }

     C5x -=1.3;
    if(C5x< -1300)
    {
        C5x= 1500;
    }

      C6x -= 2.65;
    if(C6x< -1700)
    {
        C6x= 1200;
    }


 ///Bus

 BusX+=5;
 if(BusX>600)
 {
     BusX=-750;
 }

 ///Truck
 TruckX +=0.45;

 ///CraneHandle


       CraneY -= 0.253 ;

 if(CraneY < -230)
 {

   CraneY = -10;
 }



}




glutPostRedisplay();

}




void init(void)
{
glClearColor(0,0,0,0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(0, 1920,0, 1080, -10, 10);
}





int main(int args, char **argv)
{
glutInit(&args, argv);
glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE);
glutInitWindowSize(1900, 1000);
glutInitWindowPosition(0, 0);
glutCreateWindow("Airport Scenario -Group6");
init();
glutDisplayFunc(display);
glutIdleFunc(Animation);
glutMainLoop();
return 0;
}
